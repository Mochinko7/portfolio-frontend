__NUXT_JSONP__("/posts/how-to-fetch-items-by-slug-again", (function(a,b,c,d,e){return {data:[{}],fetch:[{post:{id:c,title:"How to fetch items by slug again",body:"This past week, I spent some time experimenting with the new CMS Strapi. I really like how easy it is to build api's for web apps and mobile apps in Strapi, and I wanted to give it a try. I was considering using it for a project, but I think I will hold off for now.\n\nOne thing we do very often in web apps and websites is we fetch different content from a database based upon the url that the user is visiting. That way, we design one template for all of our blog pages, and they are accessed at a url like \"\u002Fblog\u002Fmy-awesome-article\".\n\nWhen building a website with Strapi, you will have api endpoints to fetch items from the url right out of the box generated for you, but your api endpoints will be set up to fetch by the id of the article or item instead of a slug.\n\nThis is great for many cases as you may be accessing the data from a mobile app, and you won't need a user friendly slug anyways, or if you are wanting to update an item, you normally want to update items based on the id as this ensures you will only update the specific item you want to edit. (Id's are unique and auto generated.)\n\nIn my case, I was considering using Strapi as a backend for a web app, and I want users to be able to access pages from SEO friendly and user friendly slugs.\n\nTherefore, I did some research and implemented this feature in my project. In this article, I will go into how to set up content types in Strapi to be accessible from a \u002Fslug uri versus the \u002Fid uri that is built in.\n\nMy tech choice was Nuxt for the front end, Strapi for the backend, and GraphQl for my query language.\n\nNuxt has built in functionality for Axios, and probably if I did an actual project with Strapi, I would just use Axios, as I am a fan of the Restful API convention, but I will leave that for another article.\n\nPrerequisites for your app:\nYou need to have a Strapi app configured and with the GraphGl plugin already installed. I won't go into this.\nYou also need to have your Nuxt front end already set up and configured with the Apollo GraphQl module.\nIf you want to learn how to do both of these things, then I recommend this tutorial series.\n\nIt will also help if you know Vue, and how to create content types in Strapi. If not, you may have trouble with this.",seo_description:"test",category:{id:c,name:"Full-Stack Development",description:a,slug:"full-stack-development",created_by:b,updated_by:b,created_at:"2020-09-30T16:41:57.425Z",updated_at:"2020-09-30T17:50:49.504Z"},published_at:a,preview:"Test",slug:"how-to-fetch-items-by-slug-again",created_by:{id:b,firstname:d,lastname:e,username:a},updated_by:{id:b,firstname:d,lastname:e,username:a},created_at:"2020-09-30T17:07:20.290Z",updated_at:"2020-09-30T17:50:49.425Z",image:a,technologies:[]},apiRoute:"http:\u002F\u002Flocalhost:1337"}],mutations:void 0}}(null,1,2,"Chris","Wray")));